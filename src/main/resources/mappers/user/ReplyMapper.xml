<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itbank.navercafe.user.reply.mapper.ReplyMapper">

	
	<resultMap type="com.itbank.navercafe.user.reply.dto.ReplyDTO" id="project_reply">
		<id property="replyNum" column="reply_num"/>
		<result property="boardNum" column="board_num"/>
		<result property="replyContent" column="reply_content"/>
		<result property="replySaveDate" column="reply_saveDate"/>
		<result property="userId" column="user_id"/>
		<result property="replyGroup" column="reply_group"/>
		<result property="replyStep" column="reply_step"/>
		
		<result property="cafeUserNickname" column="cafe_user_nickname"/>
		<result property="cafeUserImageNum" column="cafe_user_image_num"/>
		<result property="cafeUserGrade" column="cafe_user_grade"/>
	</resultMap>
	
	
	
	<!-- 댓글 갯수 -->
	<select id="getReplyCount" resultType="int">
		select count(*) from project_reply where board_num=#{boardNum}
	</select>
	
	
	<!-- 댓글 리스트 -->		
	<select id="getReplyList" resultType="HashMap">
		select R.reply_num,R.board_num,R.reply_content,R.reply_saveDate,R.user_id,
		R.reply_group,R.reply_step,C.cafe_id,C.cafe_user_nickname,C.cafe_user_image_num
		from project_reply R inner join project_cafe_member C on R.user_id=C.user_id
		where board_num=#{boardNum} and C.cafe_id=#{cafeId} order by reply_num desc
	</select>
	
	<!-- 댓글 작성  -->
	<insert id="saveReply">
		insert into project_reply(reply_num,board_num,reply_content,user_id,
		reply_group,reply_step) 
		values(#{replyNum},#{boardNum},#{replyContent},#{userId},#{replyNum},#{replyStep})
	</insert>
	
	<!-- 답글 작성  -->
	<insert id="saveGroupNumReply">
		insert into project_reply(reply_num,board_num,reply_content,user_id,
		reply_group,reply_step) 
		values(#{replyNum},#{boardNum},#{replyContent},#{userId},
		#{replyGroup},#{replyStep})
	</insert>

	
	<!--시퀀스값 빼와주는애  -->
	<select id="getReplyNum" resultType="int">
		select project_reply_seq.nextval replyNum from dual
	</select>
	
	<select id="getSearchReplyList" resultMap="project_reply">
		<![CDATA[
		    SELECT replyData.* FROM
	            (SELECT * FROM
			        (SELECT ROWNUM rn, boardData.* FROM
			            (SELECT boardMenu.cafe_id, boardMenu.board_menu_name, boardMenu.board_menu_type, board.*, 
			            cafeMember.cafe_user_nickname, cafeMember.cafe_user_image_num, cafeMember.cafe_user_grade
			            FROM
			                (SELECT cafe_id, board_menu_num, board_menu_name, board_menu_type FROM project_board_type
			                WHERE cafe_id = #{cafeId}
			                AND board_menu_num = #{boardMenuNum}
			                ) boardMenu,
			                (SELECT * FROM project_board 
			                WHERE board_title LIKE '%' || #{boardTitle} || '%'
			                AND board_content LIKE '%' || #{boardContent} || '%'
			                ]]>
			                <if test="startSearchDate != null and endSearchDate != null">
			                <![CDATA[
			                AND board_savedate BETWEEN TO_DATE(#{startSearchDate}, 'YYYY-MM-DD') AND TO_DATE(#{endSearchDate}, 'YYYY-MM-DD')
			                ]]>
			                </if>
			                <![CDATA[
			                ) board,
			                (SELECT * FROM project_cafe_member
			                WHERE cafe_user_nickname  LIKE '%' || #{cafeUserNickname} || '%'
			                ) cafeMember
			            WHERE
			            boardMenu.board_menu_num = board.board_menu_num
			            AND
			            board.user_id = cafeMember.user_id  AND boardMenu.cafe_id = cafeMember.cafe_id 
			            ORDER BY board_num DESC) boardData
	                )
	            WHERE rn BETWEEN #{startRow} and #{endRow}    
	            ) boardData 
            INNER JOIN
                (SELECT reply.*, replayMember.cafe_user_nickname, cafe_user_image_num, cafe_user_grade FROM
                    (SELECT * FROM project_reply
                    WHERE reply_content LIKE '%' || #{replyContent} || '%'
                    ORDER BY reply_num, reply_group, reply_step) reply
                INNER JOIN 
                    (SELECT * FROM project_cafe_member
                    WHERE cafe_user_nickname LIKE '%' || #{replyUserNickname} || '%') replayMember
                ON reply.user_id = replayMember.user_id) replyData        
            ON boardData.board_num = replyData.board_num
		]]>		
	</select>
	
	<insert id="insertReply">
		<![CDATA[
			INSERT INTO project_reply
				(REPLY_NUM, BOARD_NUM, REPLY_CONTENT, USER_ID, REPLY_GROUP, REPLY_STEP, REPLY_SAVEDATE)
        	VALUES
        		(#{replyNum}, #{boardNum}, #{replyContent}, #{userId}, #{replyGroup}, #{replyStep}, sysdate)
		]]>
	</insert>
</mapper>